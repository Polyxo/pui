trigger:
  - master
  - next
  - hotfix/*
  - bugfix/*
  - alpha/*
  - feat/*
  - un-core-v1

jobs:
- job: WFP_Design_System_publish
  pool:
    vmImage: 'ubuntu-latest'

  variables:
    NPM_CACHE_FOLDER: $(Pipeline.Workspace)/.npm
    nextRelease: unknown

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
      
#    - task: CmdLine@2
#      displayName: Checkout $(Build.SourceBranchName)
#      inputs:
#        script: 'git checkout $(Build.SourceBranchName)'

#    - script: |
#        npm config set '//registry.npmjs.org/:_authToken' "$(NPM_TOKEN)"
#      displayName: 'npm config set'

#    - task: npmAuthenticate@0
#      inputs:
#        workingFile: './.npmrc'

#    - task: Cache@2
#      inputs:
#        key: 'npm | "$(Agent.OS)" | package-lock.json'
#        path: "$(NPM_CACHE_FOLDER)"
#        restoreKeys: |
#          npm | "$(Agent.OS)"
#          npm
#      displayName: 'Cache NPM packages'

#        mkdir -p $(NPM_CACHE_FOLDER)

    - script: |
        yarn -v
        yarn install
      displayName: 'yarn install'

#    - script: |
#        yarn test
#      displayName: 'yarn test'

    - script: |
        yarn build
      displayName: 'yarn build'

    - script: |
        yarn publish:cli
      displayName: 'yarn build:cli'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

#    - script: |
#        lerna version patch --yes
#      displayName: 'yarn build:alpha-cli'
#      condition: in(variables['Build.SourceBranch'], 'refs/heads/develop', 'refs/heads/next', 'refs/heads/un-core-v1')
    
    - script: |
        lerna publish from-package --dist-tag alpha
      displayName: 'yarn build:alpha-cli'
      condition: in(variables['Build.SourceBranch'], 'refs/heads/develop', 'refs/heads/next', 'refs/heads/un-core-v1')

    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'Utzel-Butzel'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'gitTag'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'

    - powershell: |
        echo "##vso[task.setvariable variable=versionNumber;isOutput=true]$(nextRelease)"
      name: setOutputVar

    - script: |
        npmVersionString=$(node -p "require('./packages/ui/package.json').version") 
        echo "##vso[build.updatebuildnumber]$npmVersionString"
      displayName: 'set build number'

# TODO: Needs to reimplemented, probably in it's own package
#    - script: |
#        yarn build:storybook
#      workingDirectory: './packages/ui/'
#      displayName: 'yarn build:storybook'
#      env:
#        STORYBOOK_INTERNAL_ASSETS: 
#        STORYBOOK_NPM_VERSION: $(nextRelease)
#        STORYBOOK_ASSETS: https://cdn.wfp.org/guides/ui/assets/v0.0.1/

#    - task: PublishPipelineArtifact@1
#      inputs:
#        targetPath: "./packages/ui/docs"
#        artifact: "wfp-ui-kit-build"
#        publishLocation: "pipeline"

#    - task: PublishPipelineArtifact@1
#      inputs:
#        targetPath: ".packages/ui/assets"
#        artifact: "wfp-ui-kit-assets"
#        publishLocation: "pipeline"