@use "scss/meta" as *;

.normalPreview {
  position: relative;
  // border: 1px solid $border-strong;
  border-radius: 10px;
  .preview {
    //border: 1px solid $border-strong;
    position: relative;
    margin: 2em 0;
  }
}

.smallPreview {
  height: 100%;
}

.previewWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1em;
  position: relative;
}

.propTable {
  font-size: 0.8em;
  line-height: 1.2;
  border: 1px solid $border-subtle;
  border-top: 0;
}

.propName {
  font-weight: 600;
  margin-bottom: 0.3em;
}

.buttons {
  position: absolute;
  top: 0em;
  right: 0em;
  > * {
    font-size: 0.7em;
    padding: 0.5em;
    height: 2em;
  }
}

.smallPreviewWrapper {
  transform-origin: center;
  position: relative;
  height: 100%;
}

.types {
  font-size: 0.7em;
  max-width: 17em;
  display: block;
  line-height: 2em;
  display: inline-flex;
  flex-direction: column;
  align-items: flex-start;
  > span {
    display: inline-block;
    border-radius: 5px;
    background: rgba(0, 0, 0, 0.05);
    padding: 0.2em 0.5em;
    margin-bottom: 0.5em;
  }
  // overflow: auto;
}

/*
.rtl {
  .codeBlock {
    direction: rtl;
  }
}*/

.typesWrapper {
  :global(.wfp--tooltip--trigger) {
    display: inline-block;
  }
}

.propValue {
  width: 10%;
}
