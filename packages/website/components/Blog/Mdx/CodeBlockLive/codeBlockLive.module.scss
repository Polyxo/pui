@use "scss/meta" as *;

.codeBlock {
  overflow: auto;
}

.code {
  position: relative;
  &:hover {
    .copyButton {
      opacity: 1;
    }
  }
}

.copyButton {
  position: absolute;
  bottom: 0.5em;
  right: 0.5em;
  opacity: 0;
  background-color: transparent;
}

.liveEditor {
  background: black;
  position: relative;

  :global(.prism-code) {
    font-family: $font-family-monospace !important;
  }
}

.exampleHeading {
  color: $text-inverse-default;
  //opacity: 0.7;
  text-align: center;
  font-size: 0.8rem !important;
  margin-top: 0 !important;
  margin-bottom: 0;
  background-color: #000;
}

.previewInside {
  padding: 2em 1em;
  display: flex;
  justify-content: center;
  align-items: center;
}

.smallPreview {
  height: 100%;
  .previewWrapper {
    height: 100%;
  }
  .previewInside {
    height: 100%;
  }
  .preview {
    // height: 100%;
  }
}

.center {
  .preview {
    /*  display: flex;
    justify-content: center;
    align-items: center; */
  }
}

.normalPreview {
  .previewWrapper {
    border: 1px solid $border-subtle;
    // margin-top: 1em;
  }
  .previewWithSource {
    border-radius: 10px 10px 0 0;
    :global(.prism-code) {
      border-radius: 0 0 10px 10px;
    }
  }
  .showWrapper {
    border-radius: 0 0 10px 10px;
    border: 1px solid $border-subtle;
  }
  .previewWrapper {
    background: $background-main;
  }

  &.center {
    .preview {
      min-height: 10em;
    }
  }
}

.fullWidth {
  .previewWrapper {
    position: relative;
    &::after {
      content: "";
      display: block;
      width: 5em;
      bottom: 0;
      position: absolute;
      top: 0px;
      right: 0;
      border-radius: 0 10px 0 0;
      pointer-events: none;
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0) 0%,
        rgb(246, 246, 246, 0.5) 100%
      );
      z-index: 100;
      right: 0;
    }
  }
  .previewInside {
    overflow: auto;
    justify-content: flex-start;
    align-items: flex-start;
  }
  .preview {
    min-width: 1000px;
  }
}

.rtl {
  .previewWrapper {
    direction: rtl;
  }
}

.showWrapper {
  .previewWrapper {
    border: 1px solid $border-subtle;
  }
}

.collapseCode.showExpandButton {
  :global(.prism-code) {
    max-height: 200px;
    overflow: hidden;
    position: relative;
    &:after {
      position: absolute;
      bottom: 0;
      content: "";
      left: 0;
      right: 0;
      height: 5em;
      background: linear-gradient(
        0deg,
        rgba(30, 30, 30, 1) 0%,
        rgba(30, 30, 30, 0) 100%
      );
    }
  }
}

.showAllCodeWrapper {
  z-index: 1000;
  position: absolute;
  left: 0;
  right: 0em;
  bottom: 0em;
  cursor: pointer;
  padding: 0.3em;
  text-align: center;
  font-size: 0.7em;
  font-weight: 600;
  color: #fff;
}

.buttons {
  position: absolute;
  right: 0;
  top: -2em;
}

.showAllPropsButton {
  margin-left: 0.3em;
  padding: 0.5em;
  height: 2em;
}

.reactHookForm {
  :global(.wfp--btn) {
    margin-top: 1em;
  }
  .preview {
    width: 100%;
  }
  h4 {
    font-size: 1em;
  }
}

.mobileFrame {
  outline: 12px solid #2d2d2d;
  border-radius: 20px;
  width: 390px;
  height: 644px;
  position: relative;
  box-shadow: 0px 60px 60px -30px rgba(0, 0, 0, 0.3);
  iframe {
    width: 390px;
    height: 644px;
  }
  /*&:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    border: 10px solid #b46464;
    border-radius: 50px;
    padding: 0.3em;
  }*/
  &:after {
    content: "";
    position: absolute;
    top: -12px;
    left: -12px;
    bottom: -12px;
    right: -12px;
    outline: 3px solid #767676;
    border-radius: 34px;
    padding: 0.3em;
    pointer-events: none;
  }
}

.mobileFrameButtonVolumeUp,
.mobileFrameButtonVolumeDown,
.powerButton {
  position: absolute;
  top: 20%;
  left: -19px;
  background: #2d2d2d;
  border-radius: 2px 0 0 2px;
  width: 4px;
  height: 65px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  font-size: 0.8em;
  z-index: -1;
  box-shadow: inset 0px 0px 10px -5px rgba(0, 0, 0, 0.3);
}

.mobileFrameButtonVolumeDown {
  top: 32%;
}

.powerButton {
  left: inherit;
  right: -19px;
  top: 25%;
  height: 75px;
}
