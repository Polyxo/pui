[
  {
    "tags": {},
    "filePath": "src/components/StepNavigationItem/StepNavigationItem.tsx",
    "description": "",
    "displayName": "StepNavigationItem",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "Provide a className that is applied to the StepNavigation component",
        "name": "className",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "Provide text that is used alongside the control label for additional help",
        "name": "helperText",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "index": {
        "defaultValue": null,
        "description": "Provide the index of the each item",
        "name": "index",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "Provide the text that will be read by a screen reader when visiting this control",
        "name": "label",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "role": {
        "defaultValue": null,
        "description": "By default, this value is \"presentation\". You can also provide an alternate\nrole if it makes sense from the accessibility-side",
        "name": "role",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "selectedPage": {
        "defaultValue": {
          "value": "0"
        },
        "description": "Optionally provide an index for the currently selected <Tab>",
        "name": "selectedPage",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "page": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The page number of the step.",
        "name": "page",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "status": {
        "defaultValue": null,
        "description": "Provide status one of these status prop type to your step to give more meaning.",
        "name": "status",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "renderAnchor": {
        "defaultValue": null,
        "description": "An optional parameter to allow overriding the anchor rendering.\nUseful for using Tab along with react-router or other client\nside router libraries.",
        "name": "renderAnchor",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "(p: object) => {}"
        }
      },
      "onClick": {
        "defaultValue": {
          "value": "() => {}"
        },
        "description": "On click handler to change the currently active item.",
        "name": "onClick",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: object) => {}"
        }
      },
      "handleTabClick": {
        "defaultValue": {
          "value": "() => {}"
        },
        "description": "",
        "name": "handleTabClick",
        "declarations": [
          {
            "fileName": "src/components/StepNavigationItem/StepNavigationItem.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "(e?: any, index?: number, label?: string) => {}"
        }
      }
    }
  }
]