[
  {
    "tags": {},
    "filePath": "src/components/Input/Input.tsx",
    "description": "",
    "displayName": "Input",
    "methods": [],
    "props": {
      "labelClasses": {
        "defaultValue": null,
        "description": "The classes for the label",
        "name": "labelClasses",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputPropsForReplacementComponents"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputPropsForReplacementComponents"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "calculatedId": {
        "defaultValue": null,
        "description": "The the ID of the element, uses the `name` prop if no `id` is provided. Make sure it is unique on the page.",
        "name": "calculatedId",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputPropsForReplacementComponents"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputPropsForReplacementComponents"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "helperTextClasses": {
        "defaultValue": null,
        "description": "The classes for the helper element",
        "name": "helperTextClasses",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputPropsForReplacementComponents"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputPropsForReplacementComponents"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "errorClasses": {
        "defaultValue": null,
        "description": "The classes for the error element",
        "name": "errorClasses",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputPropsForReplacementComponents"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputPropsForReplacementComponents"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "errorId": {
        "defaultValue": null,
        "description": "The id of the error. calculatedId + '-error-msg'",
        "name": "errorId",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputPropsForReplacementComponents"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputPropsForReplacementComponents"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "errorIcon": {
        "defaultValue": null,
        "description": "An icon for the error element",
        "name": "errorIcon",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputPropsForReplacementComponents"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputPropsForReplacementComponents"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "Provide text that is used alongside the control label for additional help",
        "name": "helperText",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "labelText": {
        "defaultValue": null,
        "description": "Provide the text that will be read by a screen reader when visiting this\ncontrol @design",
        "name": "labelText",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "formItemClassName": {
        "defaultValue": null,
        "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
        "name": "formItemClassName",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "inputWrapperClassName": {
        "defaultValue": null,
        "description": "Provide a custom className that is applied directly to the underlying\n&lt;textarea&gt; node",
        "name": "inputWrapperClassName",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "hideLabel": {
        "defaultValue": null,
        "description": "Specify whether you want the underlying label to be visually hidden",
        "name": "hideLabel",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "invalid": {
        "defaultValue": null,
        "description": "Specify whether the control is currently invalid.\nEither a boolean in combination with `invalidText` or an `object`( eg. { message: \"Message\", â€¦otherErrorProperties }) can be passed.",
        "name": "invalid",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "invalidText": {
        "defaultValue": null,
        "description": "Provide the text that is displayed when the control is in an invalid state @design",
        "name": "invalidText",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "additional": {
        "defaultValue": null,
        "description": "Provide the content that will be shown in addition to the label\n(e.g. units, currency, etc.)\nThis content will be placed after the label @design",
        "name": "additional",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "light": {
        "defaultValue": null,
        "description": "",
        "name": "light",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "Specify the placeholder attribute for the input @design",
        "name": "placeholder",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "Provide a unique identifier for the control",
        "name": "id",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "Provide a name for the control",
        "name": "name",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "required": {
        "defaultValue": null,
        "description": "Specify if the control is required @design\n(sets aria-invalid as well)",
        "name": "required",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "disabled": {
        "defaultValue": null,
        "description": "Specify if the control is disabled @design\n(sets aria-disabled as well)",
        "name": "disabled",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "readOnly": {
        "defaultValue": null,
        "description": "If the input is read-only, the user cannot change its value but focus\nand tabIndex are still applied @design\n(sets aria-readonly as well)",
        "name": "readOnly",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "inline": {
        "defaultValue": null,
        "description": "Renders the input as inline element for horizontal forms",
        "name": "inline",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "addonBefore": {
        "defaultValue": null,
        "description": "Additional helper in front of the input, e.g. a currency symbol @design\n(sets aria-describedby as well)",
        "name": "addonBefore",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "addonAfter": {
        "defaultValue": null,
        "description": "Additional helper behind the input, e.g. a currency symbol @design\n(sets aria-describedby as well)",
        "name": "addonAfter",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "components": {
        "defaultValue": null,
        "description": "Supports replacement components",
        "name": "components",
        "parent": {
          "fileName": "src/components/Input/Input.tsx",
          "name": "InputProps"
        },
        "declarations": [
          {
            "fileName": "src/components/Input/Input.tsx",
            "name": "InputProps"
          }
        ],
        "required": false,
        "type": {
          "name": "{ AddonBefore?: ComponentType<InputPropsForReplacementComponents>; AddonAfter?: ComponentType<InputPropsForReplacementComponents>; Label?: ComponentType<...>; HelperText?: ComponentType<...>; Error?: ComponentType<...>; }"
        }
      }
    }
  }
]